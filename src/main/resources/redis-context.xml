<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
      http://www.springframework.org/schema/beans 
      http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <!-- redis 相关配置 -->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig"
        p:maxTotal="${redis.maxTotal}"
        p:maxIdle="${redis.maxIdle}"
        p:testOnBorrow="${redis.testOnBorrow}" />

	<!-- jedis pool配置 -->  
	<bean id="jedisPool" class="redis.clients.jedis.JedisPool">  
	    <constructor-arg index="0" ref="poolConfig" />  
	    <constructor-arg index="1" value="${redis.host}" />  
	    <constructor-arg index="2" value="${redis.port}" />  
	    <constructor-arg index="3" value="30000"/>  
	    <constructor-arg index="4" value="${redis.password}"/>  
	</bean>

    <bean id="jedisConnectionFactory"
        class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
        p:hostName="${redis.host}"
        p:port="${redis.port}" 
        p:password="${redis.password}"
        p:database="${redis.database}"
        p:pool-config-ref="poolConfig" />
        
    <!-- redis template definition -->  
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
        p:connectionFactory-ref="jedisConnectionFactory" 
        p:keySerializer-ref="redisTemplateKeySerializer"
        p:valueSerializer-ref="redisTemplateValueSerializer"
        p:hashKeySerializer-ref="redisTemplateHashKeySerializer"
        p:hashValueSerializer-ref="redisTemplateHashValueSerializer"/>
    <bean id="redisTemplateKeySerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer" />  
    <bean id="redisTemplateValueSerializer" class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />  
    <bean id="redisTemplateHashKeySerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer" />  
    <bean id="redisTemplateHashValueSerializer" class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
    
<!--     <bean id="redisMessageListener"
          class="org.springframework.data.redis.listener.adapter.MessageListenerAdapter">
        <constructor-arg>
            <bean class="cn.com.syscom.redis.MyRedisKeyExpiredMessageDelegate" />
        </constructor-arg>
    </bean>
    <bean id="redisContainer" class="org.springframework.data.redis.listener.RedisMessageListenerContainer">
        <property name="connectionFactory" ref="jedisConnectionFactory" />
        <property name="messageListeners">
            <map>
                <entry key-ref="redisMessageListener">
                    <list>
                        <bean class="org.springframework.data.redis.listener.ChannelTopic">
                            <constructor-arg value="__keyevent@0__:expired" />
                        </bean>
                    </list>
                </entry>
            </map>
        </property>
    </bean> -->
    
</beans>